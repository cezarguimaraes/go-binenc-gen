// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: conda.proto

package main_test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PBCondaRepoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info            *PBCondaRepoData_Info           `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Packages        []*PBCondaRepoData_Package      `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty"`
	PackagesConda   []*PBCondaRepoData_PackageConda `protobuf:"bytes,3,rep,name=packages_conda,json=packages.conda,proto3" json:"packages_conda,omitempty"`
	Removed         []string                        `protobuf:"bytes,4,rep,name=removed,proto3" json:"removed,omitempty"`
	RepodataVersion uint32                          `protobuf:"varint,5,opt,name=repodata_version,json=repodataVersion,proto3" json:"repodata_version,omitempty"`
}

func (x *PBCondaRepoData) Reset() {
	*x = PBCondaRepoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conda_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBCondaRepoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBCondaRepoData) ProtoMessage() {}

func (x *PBCondaRepoData) ProtoReflect() protoreflect.Message {
	mi := &file_conda_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBCondaRepoData.ProtoReflect.Descriptor instead.
func (*PBCondaRepoData) Descriptor() ([]byte, []int) {
	return file_conda_proto_rawDescGZIP(), []int{0}
}

func (x *PBCondaRepoData) GetInfo() *PBCondaRepoData_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PBCondaRepoData) GetPackages() []*PBCondaRepoData_Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *PBCondaRepoData) GetPackagesConda() []*PBCondaRepoData_PackageConda {
	if x != nil {
		return x.PackagesConda
	}
	return nil
}

func (x *PBCondaRepoData) GetRemoved() []string {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *PBCondaRepoData) GetRepodataVersion() uint32 {
	if x != nil {
		return x.RepodataVersion
	}
	return 0
}

type PBCondaRepoData_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subdir string `protobuf:"bytes,1,opt,name=subdir,proto3" json:"subdir,omitempty"`
}

func (x *PBCondaRepoData_Info) Reset() {
	*x = PBCondaRepoData_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conda_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBCondaRepoData_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBCondaRepoData_Info) ProtoMessage() {}

func (x *PBCondaRepoData_Info) ProtoReflect() protoreflect.Message {
	mi := &file_conda_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBCondaRepoData_Info.ProtoReflect.Descriptor instead.
func (*PBCondaRepoData_Info) Descriptor() ([]byte, []int) {
	return file_conda_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PBCondaRepoData_Info) GetSubdir() string {
	if x != nil {
		return x.Subdir
	}
	return ""
}

type PBCondaRepoData_Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build       string   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	BuildNumber uint32   `protobuf:"varint,2,opt,name=build_number,json=buildNumber,proto3" json:"build_number,omitempty"`
	Depends     []string `protobuf:"bytes,3,rep,name=depends,proto3" json:"depends,omitempty"`
	License     string   `protobuf:"bytes,4,opt,name=license,proto3" json:"license,omitempty"`
	Md5         string   `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	Name        string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Sha256      string   `protobuf:"bytes,7,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Size        uint32   `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Subdir      string   `protobuf:"bytes,9,opt,name=subdir,proto3" json:"subdir,omitempty"`
	Timestamp   uint64   `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version     string   `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PBCondaRepoData_Package) Reset() {
	*x = PBCondaRepoData_Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conda_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBCondaRepoData_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBCondaRepoData_Package) ProtoMessage() {}

func (x *PBCondaRepoData_Package) ProtoReflect() protoreflect.Message {
	mi := &file_conda_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBCondaRepoData_Package.ProtoReflect.Descriptor instead.
func (*PBCondaRepoData_Package) Descriptor() ([]byte, []int) {
	return file_conda_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PBCondaRepoData_Package) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *PBCondaRepoData_Package) GetBuildNumber() uint32 {
	if x != nil {
		return x.BuildNumber
	}
	return 0
}

func (x *PBCondaRepoData_Package) GetDepends() []string {
	if x != nil {
		return x.Depends
	}
	return nil
}

func (x *PBCondaRepoData_Package) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *PBCondaRepoData_Package) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *PBCondaRepoData_Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PBCondaRepoData_Package) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *PBCondaRepoData_Package) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PBCondaRepoData_Package) GetSubdir() string {
	if x != nil {
		return x.Subdir
	}
	return ""
}

func (x *PBCondaRepoData_Package) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PBCondaRepoData_Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PBCondaRepoData_PackageConda struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build         string   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	BuildNumber   uint32   `protobuf:"varint,2,opt,name=build_number,json=buildNumber,proto3" json:"build_number,omitempty"`
	Depends       []string `protobuf:"bytes,3,rep,name=depends,proto3" json:"depends,omitempty"`
	License       string   `protobuf:"bytes,4,opt,name=license,proto3" json:"license,omitempty"`
	Md5           string   `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	Name          string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Sha256        string   `protobuf:"bytes,7,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Size          uint32   `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Subdir        string   `protobuf:"bytes,9,opt,name=subdir,proto3" json:"subdir,omitempty"`
	Timestamp     uint64   `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version       string   `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	Constrains    []string `protobuf:"bytes,12,rep,name=constrains,proto3" json:"constrains,omitempty"`
	LegacyBz2Md5  string   `protobuf:"bytes,13,opt,name=legacy_bz2_md5,json=legacyBz2Md5,proto3" json:"legacy_bz2_md5,omitempty"`
	LicenseFamily string   `protobuf:"bytes,14,opt,name=license_family,json=licenseFamily,proto3" json:"license_family,omitempty"`
}

func (x *PBCondaRepoData_PackageConda) Reset() {
	*x = PBCondaRepoData_PackageConda{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conda_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBCondaRepoData_PackageConda) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBCondaRepoData_PackageConda) ProtoMessage() {}

func (x *PBCondaRepoData_PackageConda) ProtoReflect() protoreflect.Message {
	mi := &file_conda_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBCondaRepoData_PackageConda.ProtoReflect.Descriptor instead.
func (*PBCondaRepoData_PackageConda) Descriptor() ([]byte, []int) {
	return file_conda_proto_rawDescGZIP(), []int{0, 2}
}

func (x *PBCondaRepoData_PackageConda) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetBuildNumber() uint32 {
	if x != nil {
		return x.BuildNumber
	}
	return 0
}

func (x *PBCondaRepoData_PackageConda) GetDepends() []string {
	if x != nil {
		return x.Depends
	}
	return nil
}

func (x *PBCondaRepoData_PackageConda) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PBCondaRepoData_PackageConda) GetSubdir() string {
	if x != nil {
		return x.Subdir
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PBCondaRepoData_PackageConda) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetConstrains() []string {
	if x != nil {
		return x.Constrains
	}
	return nil
}

func (x *PBCondaRepoData_PackageConda) GetLegacyBz2Md5() string {
	if x != nil {
		return x.LegacyBz2Md5
	}
	return ""
}

func (x *PBCondaRepoData_PackageConda) GetLicenseFamily() string {
	if x != nil {
		return x.LicenseFamily
	}
	return ""
}

var File_conda_proto protoreflect.FileDescriptor

var file_conda_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x22, 0xe4, 0x07, 0x0a, 0x0f, 0x50, 0x42, 0x43,
	0x6f, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6e, 0x64, 0x61, 0x52, 0x65,
	0x70, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x42, 0x43, 0x6f, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x4f, 0x0a, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x70,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x64, 0x61, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x70, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x72, 0x1a, 0x98, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x8a, 0x03, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x64, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x62, 0x7a, 0x32,
	0x5f, 0x6d, 0x64, 0x35, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x42, 0x7a, 0x32, 0x4d, 0x64, 0x35, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65,
	0x7a, 0x61, 0x72, 0x67, 0x75, 0x69, 0x6d, 0x61, 0x72, 0x61, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2d,
	0x62, 0x69, 0x6e, 0x65, 0x6e, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conda_proto_rawDescOnce sync.Once
	file_conda_proto_rawDescData = file_conda_proto_rawDesc
)

func file_conda_proto_rawDescGZIP() []byte {
	file_conda_proto_rawDescOnce.Do(func() {
		file_conda_proto_rawDescData = protoimpl.X.CompressGZIP(file_conda_proto_rawDescData)
	})
	return file_conda_proto_rawDescData
}

var file_conda_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_conda_proto_goTypes = []interface{}{
	(*PBCondaRepoData)(nil),              // 0: main_test.PBCondaRepoData
	(*PBCondaRepoData_Info)(nil),         // 1: main_test.PBCondaRepoData.Info
	(*PBCondaRepoData_Package)(nil),      // 2: main_test.PBCondaRepoData.Package
	(*PBCondaRepoData_PackageConda)(nil), // 3: main_test.PBCondaRepoData.PackageConda
}
var file_conda_proto_depIdxs = []int32{
	1, // 0: main_test.PBCondaRepoData.info:type_name -> main_test.PBCondaRepoData.Info
	2, // 1: main_test.PBCondaRepoData.packages:type_name -> main_test.PBCondaRepoData.Package
	3, // 2: main_test.PBCondaRepoData.packages_conda:type_name -> main_test.PBCondaRepoData.PackageConda
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_conda_proto_init() }
func file_conda_proto_init() {
	if File_conda_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conda_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBCondaRepoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conda_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBCondaRepoData_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conda_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBCondaRepoData_Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conda_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBCondaRepoData_PackageConda); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conda_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conda_proto_goTypes,
		DependencyIndexes: file_conda_proto_depIdxs,
		MessageInfos:      file_conda_proto_msgTypes,
	}.Build()
	File_conda_proto = out.File
	file_conda_proto_rawDesc = nil
	file_conda_proto_goTypes = nil
	file_conda_proto_depIdxs = nil
}
