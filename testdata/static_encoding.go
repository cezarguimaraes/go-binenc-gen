// Code generated by "gobinenc static.go"; DO NOT EDIT.

package static

import (
	"io"
)

func (s *Static) Write(w io.Writer) (n int, err error) {
	size := 30
	buf := make([]byte, size)
	offset := 0
	// Uint8
	buf[offset] = byte(s.Uint8)
	offset += 1
	// Uint16
	buf[offset] = byte(s.Uint16)
	buf[offset+1] = byte(s.Uint16 >> 8)
	offset += 2
	// Uint32
	buf[offset] = byte(s.Uint32)
	buf[offset+1] = byte(s.Uint32 >> 8)
	buf[offset+2] = byte(s.Uint32 >> 16)
	buf[offset+3] = byte(s.Uint32 >> 24)
	offset += 4
	// Uint64
	buf[offset] = byte(s.Uint64)
	buf[offset+1] = byte(s.Uint64 >> 8)
	buf[offset+2] = byte(s.Uint64 >> 16)
	buf[offset+3] = byte(s.Uint64 >> 24)
	buf[offset+4] = byte(s.Uint64 >> 32)
	buf[offset+5] = byte(s.Uint64 >> 40)
	buf[offset+6] = byte(s.Uint64 >> 48)
	buf[offset+7] = byte(s.Uint64 >> 56)
	offset += 8
	// Int8
	buf[offset] = byte(uint8(s.Int8))
	offset += 1
	// Int16
	buf[offset] = byte(uint16(s.Int16))
	buf[offset+1] = byte(uint16(s.Int16) >> 8)
	offset += 2
	// Int32
	buf[offset] = byte(uint32(s.Int32))
	buf[offset+1] = byte(uint32(s.Int32) >> 8)
	buf[offset+2] = byte(uint32(s.Int32) >> 16)
	buf[offset+3] = byte(uint32(s.Int32) >> 24)
	offset += 4
	// Int64
	buf[offset] = byte(uint64(s.Int64))
	buf[offset+1] = byte(uint64(s.Int64) >> 8)
	buf[offset+2] = byte(uint64(s.Int64) >> 16)
	buf[offset+3] = byte(uint64(s.Int64) >> 24)
	buf[offset+4] = byte(uint64(s.Int64) >> 32)
	buf[offset+5] = byte(uint64(s.Int64) >> 40)
	buf[offset+6] = byte(uint64(s.Int64) >> 48)
	buf[offset+7] = byte(uint64(s.Int64) >> 56)
	offset += 8
	return w.Write(buf)
}
